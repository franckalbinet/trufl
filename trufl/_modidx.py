# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/trufl',
                'doc_host': 'https://franckalbinet.github.io',
                'git_url': 'https://github.com/franckalbinet/trufl',
                'lib_path': 'trufl'},
  'syms': { 'trufl.callbacks': { 'trufl.callbacks.Callback': ('callbacks.html#callback', 'trufl/callbacks.py'),
                                 'trufl.callbacks.CountCB': ('callbacks.html#countcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.CountCB.__call__': ('callbacks.html#countcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MaxCB': ('callbacks.html#maxcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MaxCB.__call__': ('callbacks.html#maxcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MinCB': ('callbacks.html#mincb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MinCB.__call__': ('callbacks.html#mincb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB': ('callbacks.html#moranicb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB.__call__': ('callbacks.html#moranicb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB.__init__': ('callbacks.html#moranicb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.MoranICB._weights': ('callbacks.html#moranicb._weights', 'trufl/callbacks.py'),
                                 'trufl.callbacks.PriorCB': ('callbacks.html#priorcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.PriorCB.__call__': ('callbacks.html#priorcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.PriorCB.__init__': ('callbacks.html#priorcb.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State': ('callbacks.html#state', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State.__init__': ('callbacks.html#state.__init__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State._flatten': ('callbacks.html#state._flatten', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State.expand_to_k_nearest': ( 'callbacks.html#state.expand_to_k_nearest',
                                                                                'trufl/callbacks.py'),
                                 'trufl.callbacks.State.get': ('callbacks.html#state.get', 'trufl/callbacks.py'),
                                 'trufl.callbacks.State.run_cbs': ('callbacks.html#state.run_cbs', 'trufl/callbacks.py'),
                                 'trufl.callbacks.StdCB': ('callbacks.html#stdcb', 'trufl/callbacks.py'),
                                 'trufl.callbacks.StdCB.__call__': ('callbacks.html#stdcb.__call__', 'trufl/callbacks.py'),
                                 'trufl.callbacks.Variable': ('callbacks.html#variable', 'trufl/callbacks.py')},
            'trufl.loading': {'trufl.loading.foo': ('optimizer.html#foo', 'trufl/loading.py')},
            'trufl.optimizer': {'trufl.optimizer.foo': ('optimizer.html#foo', 'trufl/optimizer.py')},
            'trufl.reader': { 'trufl.reader.read_geojson': ('reader.html#read_geojson', 'trufl/reader.py'),
                              'trufl.reader.read_shapefile': ('reader.html#read_shapefile', 'trufl/reader.py')},
            'trufl.sampler': { 'trufl.sampler.Sampler': ('sampler.html#sampler', 'trufl/sampler.py'),
                               'trufl.sampler.Sampler.__init__': ('sampler.html#sampler.__init__', 'trufl/sampler.py'),
                               'trufl.sampler.Sampler.sample': ('sampler.html#sampler.sample', 'trufl/sampler.py'),
                               'trufl.sampler.Sampler.to_geodataframe': ('sampler.html#sampler.to_geodataframe', 'trufl/sampler.py')},
            'trufl.utils': { 'trufl.utils.anonymize_raster': ('utils.html#anonymize_raster', 'trufl/utils.py'),
                             'trufl.utils.gridder': ('utils.html#gridder', 'trufl/utils.py'),
                             'trufl.utils.reproject_raster': ('utils.html#reproject_raster', 'trufl/utils.py')}}}
