# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_sampler.ipynb.

# %% auto 0
__all__ = ['Sampler']

# %% ../nbs/01_sampler.ipynb 3
import rasterio
from rasterio import transform
import fastcore.all as fc
import matplotlib.pyplot as plt
from .utils import reproject_raster
import geopandas as gpd
from typing import List

from .utils import gridder

# %% ../nbs/01_sampler.ipynb 4
class Sampler:
    def __init__(self, 
               fname_raster:str, # The path to the raster file.
               band:int=1, # The band number to use. Defaults to 1.
               id_name:str='loc_id'
               ):
        "Emulate data collection. Provided a set of location, return values sampled from given raster file."
        fc.store_attr()
        with rasterio.open(fname_raster) as src:
            self.band_data = src.read(band)
            self.affine = src.transform
    
    def to_geodataframe(self, 
                        geoseries:gpd.GeoSeries, # The locations
                        values:List[float] # The sampled values
                        ) -> gpd.GeoDataFrame: 
        gdf = geoseries.to_frame(name='geometry').explode(index_parts=False)
        gdf = gdf.assign(values=values)
        return gdf.reset_index(names=self.id_name)
    
    def sample(self, 
               geoseries:gpd.GeoSeries # The locations
               ) -> gpd.GeoDataFrame:
        coords = [(x, y) for x, y in geoseries.get_coordinates().values]
        pixel_coords = [transform.rowcol(self.affine, *pair) for pair in coords]
        values = [self.band_data[int(y), int(x)] for (x, y) in pixel_coords]
        return self.to_geodataframe(geoseries, values)
